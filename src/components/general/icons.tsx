import { Mail } from "lucide-react";

export const Icons = {
  snapchat: (props: React.SVGProps<SVGSVGElement>) => (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width={props.width || "16"}
      height={props.height || "16"}
      fill="#000"
    >
      <path
        fill="inherit"
        d="M13.323 10.625c0-.153-.077-.246-.23-.281a2.783 2.783 0 0 1-1.228-.615 3.218 3.218 0 0 1-.834-1.125 1.007 1.007 0 0 1-.073-.26c0-.104.068-.195.204-.271.135-.076.284-.136.447-.177a1.27 1.27 0 0 0 .448-.214.457.457 0 0 0 .203-.38c0-.132-.064-.241-.192-.328a.706.706 0 0 0-.401-.13.96.96 0 0 0-.334.083.951.951 0 0 1-.323.083.57.57 0 0 1-.125-.02c.035-.66.053-1.056.053-1.188 0-.549-.06-.944-.178-1.187a2.934 2.934 0 0 0-1.072-1.266 2.844 2.844 0 0 0-1.584-.453c-1.382 0-2.337.573-2.864 1.719-.118.243-.178.638-.178 1.187 0 .132.018.528.053 1.188a.357.357 0 0 1-.146.02c-.084 0-.195-.026-.334-.078a.998.998 0 0 0-.312-.078.694.694 0 0 0-.401.125.386.386 0 0 0-.182.333c0 .146.067.27.203.37.135.101.284.172.448.214.163.042.312.1.448.177.135.076.203.167.203.27 0 .042-.025.13-.073.261-.445.959-1.132 1.538-2.063 1.74-.153.035-.229.128-.229.281 0 .32.476.556 1.427.708.014.035.035.125.063.271a.749.749 0 0 0 .12.318c.052.066.133.099.244.099.084 0 .214-.016.39-.047.178-.031.315-.047.412-.047.243 0 .476.052.698.156.222.104.41.217.563.339.153.121.352.234.599.338.246.105.512.157.797.157.298 0 .572-.052.822-.157.25-.104.45-.217.6-.338.149-.122.335-.235.557-.339.222-.104.455-.156.698-.156.097 0 .234.014.411.042.177.027.31.041.401.041.111 0 .191-.034.24-.104a.842.842 0 0 0 .114-.312c.028-.14.049-.226.063-.26.951-.153 1.427-.39 1.427-.709ZM16 8c0 1.451-.358 2.79-1.073 4.016a7.965 7.965 0 0 1-2.911 2.911A7.826 7.826 0 0 1 8 16a7.826 7.826 0 0 1-4.016-1.073 7.964 7.964 0 0 1-2.911-2.911A7.826 7.826 0 0 1 0 8c0-1.451.358-2.79 1.073-4.016a7.964 7.964 0 0 1 2.911-2.911A7.826 7.826 0 0 1 8 0c1.451 0 2.79.358 4.016 1.073a7.964 7.964 0 0 1 2.911 2.911A7.826 7.826 0 0 1 16 8Z"
      />
    </svg>
  ),
  tiktok: (props: React.SVGProps<SVGSVGElement>) => (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width={props.width || "16"}
      height={props.height || "16"}
      fill="#000"
    >
      <path
        stroke="inherit"
        strokeLinecap="round"
        strokeLinejoin="round"
        strokeWidth="1.5"
        d="M1.667 8c0-2.985 0-4.478.927-5.406.927-.927 2.42-.927 5.406-.927 2.985 0 4.479 0 5.406.927.927.928.927 2.42.927 5.406 0 2.986 0 4.479-.927 5.406-.928.928-2.42.928-5.406.928-2.986 0-4.479 0-5.406-.928-.927-.927-.927-2.42-.927-5.406Z"
      />
      <path
        stroke="inherit"
        strokeLinecap="round"
        strokeLinejoin="round"
        strokeWidth="1.5"
        d="M7.024 7.339c-.547-.078-1.794.05-2.404 1.18-.61 1.13.004 2.306.39 2.752.378.418 1.584 1.21 2.864.437.317-.191.712-.335 1.16-1.831l-.052-5.89c-.086.649.63 2.17 2.67 2.35"
      />
    </svg>
  ),
  facebook: (props: React.SVGProps<SVGSVGElement>) => (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width={props.width || "16"}
      height={props.height || "16"}
      fill="#000"
    >
      <path
        fill="inherit"
        d="M14.667 8A6.669 6.669 0 0 0 8 1.333 6.67 6.67 0 0 0 1.333 8a6.673 6.673 0 0 0 5.334 6.533V10H5.334V8h1.333V6.333A2.336 2.336 0 0 1 9 4h1.667v2H9.334c-.367 0-.667.3-.667.666V8h2v2h-2v4.633a6.666 6.666 0 0 0 6-6.633Z"
      />
    </svg>
  ),
  linkedin: (props: React.SVGProps<SVGSVGElement>) => (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width={props.width || "16"}
      height={props.height || "16"}
      fill="#000"
    >
      <path
        stroke="inherit"
        strokeLinecap="round"
        strokeLinejoin="round"
        strokeWidth="2"
        d="M10.667 5.333a4 4 0 0 1 4 4V14H12V9.333a1.333 1.333 0 0 0-2.666 0V14H6.667V9.333a4 4 0 0 1 4-4ZM1.333 6H4v8H1.333V6ZM2.667 4a1.333 1.333 0 1 0 0-2.667 1.333 1.333 0 0 0 0 2.667Z"
      />
    </svg>
  ),
  twitter: (props: React.SVGProps<SVGSVGElement>) => (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width={props.width || "16"}
      height={props.height || "16"}
      fill="#000"
    >
      <mask
        id="a"
        width={props.width || "16"}
        height={props.height || "16"}
        x="0"
        y="0"
        maskUnits="userSpaceOnUse"
        style={{ maskType: "luminance" }}
      >
        <path fill="inherit" d="M0 0h16v16H0V0Z" />
      </mask>
      <g mask="url(#a)">
        <path
          fill="inherit"
          d="M12.6.75h2.454l-5.36 6.142L16 15.25h-4.937l-3.87-5.069-4.423 5.069H.314l5.733-6.572L0 .751h5.063l3.492 4.632L12.6.75Zm-.863 13.029h1.36L4.32 2.145H2.862l8.875 11.634Z"
        />
      </g>
    </svg>
  ),
  instagram: (props: React.SVGProps<SVGSVGElement>) => (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width={props.width || "16"}
      height={props.height || "16"}
      fill="#000"
    >
      <path
        fill="inherit"
        d="M11.56 3.64a.8.8 0 1 0 0 1.6.8.8 0 0 0 0-1.6Zm3.067 1.613a5.07 5.07 0 0 0-.307-1.62 3.267 3.267 0 0 0-.773-1.18 3.133 3.133 0 0 0-1.18-.767 4.867 4.867 0 0 0-1.62-.313c-.707-.04-.934-.04-2.747-.04-1.813 0-2.04 0-2.747.04a4.867 4.867 0 0 0-1.62.313 3.2 3.2 0 0 0-1.18.767c-.341.33-.603.734-.766 1.18a4.867 4.867 0 0 0-.314 1.62c-.04.707-.04.933-.04 2.747 0 1.813 0 2.04.04 2.746.012.554.118 1.102.314 1.62.163.447.425.85.766 1.18.332.34.735.602 1.18.767a4.865 4.865 0 0 0 1.62.313c.707.04.934.04 2.747.04 1.813 0 2.04 0 2.747-.04a4.864 4.864 0 0 0 1.62-.313c.446-.163.85-.425 1.18-.767.341-.331.605-.734.773-1.18.19-.52.294-1.066.307-1.62 0-.706.04-.933.04-2.746 0-1.814 0-2.04-.04-2.747Zm-1.2 5.413a3.732 3.732 0 0 1-.227 1.24c-.106.29-.277.553-.5.767-.216.22-.478.39-.766.5a3.735 3.735 0 0 1-1.24.227c-.667.033-.914.04-2.667.04-1.753 0-2 0-2.667-.04-.44.008-.877-.06-1.293-.2a2.2 2.2 0 0 1-.734-.5 2 2 0 0 1-.493-.767 3.667 3.667 0 0 1-.266-1.267c0-.666-.04-.913-.04-2.666 0-1.754 0-2 .04-2.667.002-.433.08-.862.233-1.267a2 2 0 0 1 .526-.733c.202-.23.453-.412.734-.533a3.8 3.8 0 0 1 1.266-.227c.667 0 .914-.04 2.667-.04 1.754 0 2 0 2.667.04.423.005.842.081 1.24.227.303.112.575.295.793.533.218.205.389.456.5.733.149.406.225.835.227 1.267.033.667.04.913.04 2.667 0 1.753-.007 2-.04 2.666ZM8 4.58a3.42 3.42 0 1 0 3.168 2.108A3.413 3.413 0 0 0 8 4.58Zm0 5.64a2.22 2.22 0 1 1 0-4.44 2.22 2.22 0 0 1 0 4.44Z"
      />
    </svg>
  ),
  mail: Mail,
  calendar: (props: React.SVGProps<SVGSVGElement>) => (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width={props.width || "16"}
      height={props.height || "16"}
      viewBox="0 0 25 24"
      fill="none"
    >
      <path
        d="M2.625 6C2.625 3.79077 4.41586 2 6.625 2H18.625C20.8341 2 22.625 3.79077 22.625 6V20C22.625 21.1045 21.7296 22 20.625 22H4.625C3.52043 22 2.625 21.1045 2.625 20V6ZM6.625 4C5.52043 4 4.625 4.89551 4.625 6V8H20.625V6C20.625 4.89551 19.7296 4 18.625 4H17.625V6H15.625V4H9.625V6H7.625V4H6.625ZM4.625 20H20.625V10H4.625V20Z"
        fill="inherit"
      />
    </svg>
  ),
  one: (props: React.SVGProps<SVGSVGElement>) => (
    <svg
      width={23}
      height={35}
      viewBox="0 0 23 35"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      {...props}
    >
      <mask
        id="path-1-outside-1_914_4039"
        maskUnits="userSpaceOnUse"
        x={-0.0256348}
        y={0.5}
        width={23}
        height={34}
        fill="black"
      >
        <rect fill="white" x={-0.0256348} y={0.5} width={23} height={34} />
        <path d="M18.5299 29.636C18.5299 29.9 17.7979 30.116 16.3339 30.284C14.8699 30.428 13.4059 30.5 11.9419 30.5C10.4779 30.5 9.52987 30.44 9.09787 30.32C8.68987 30.176 8.48587 29.948 8.48587 29.636V14.084H4.81387C4.40587 14.084 4.20187 13.208 4.20187 11.456C4.20187 9.704 4.40587 8.12 4.81387 6.704C4.93387 6.248 6.20587 5.828 8.62987 5.444C11.0539 5.06 12.9139 4.868 14.2099 4.868C15.5059 4.868 16.3699 4.916 16.8019 5.012C17.2339 5.108 17.5579 5.228 17.7739 5.372C17.9899 5.492 18.1579 5.636 18.2779 5.804C18.4459 6.068 18.5299 6.32 18.5299 6.56V29.636Z" />
      </mask>
      <path
        d="M16.3339 30.284L16.7254 34.2648L16.7577 34.2616L16.7899 34.2579L16.3339 30.284ZM9.09787 30.32L7.76659 34.092L7.89553 34.1375L8.02729 34.1741L9.09787 30.32ZM8.48587 14.084H12.4859V10.084H8.48587V14.084ZM4.81387 6.704L8.65749 7.81149L8.67035 7.76687L8.68216 7.72197L4.81387 6.704ZM8.62987 5.444L8.00401 1.49326L8.00401 1.49326L8.62987 5.444ZM16.8019 5.012L15.9341 8.91675L15.9342 8.91675L16.8019 5.012ZM17.7739 5.372L15.5551 8.70019L15.6898 8.79L15.8313 8.86863L17.7739 5.372ZM18.2779 5.804L21.6525 3.6565L21.595 3.56617L21.5328 3.47904L18.2779 5.804ZM14.5299 29.636C14.5299 27.6496 15.9176 26.6646 16.1992 26.48C16.4207 26.3348 16.6011 26.2543 16.6869 26.2187C16.7804 26.1798 16.8399 26.1622 16.8488 26.1595C16.8609 26.156 16.7919 26.1762 16.6056 26.2088C16.4284 26.2398 16.189 26.2744 15.8778 26.3101L16.7899 34.2579C17.5814 34.1671 18.4073 34.0407 19.1129 33.8325C19.4369 33.7369 20.0107 33.5472 20.586 33.17C21.0506 32.8654 22.5299 31.7544 22.5299 29.636H14.5299ZM15.9423 26.3032C14.6078 26.4345 13.2745 26.5 11.9419 26.5V34.5C13.5372 34.5 15.1319 34.4215 16.7254 34.2648L15.9423 26.3032ZM11.9419 26.5C11.2544 26.5 10.7434 26.4856 10.3855 26.463C10.2076 26.4517 10.0955 26.4401 10.036 26.4323C9.96041 26.4225 10.0246 26.426 10.1684 26.4659L8.02729 34.1741C8.66885 34.3523 9.36534 34.4144 9.88021 34.447C10.4704 34.4844 11.1653 34.5 11.9419 34.5V26.5ZM10.4291 26.548C10.6116 26.6124 11.1261 26.822 11.6198 27.3738C12.1882 28.0091 12.4859 28.8293 12.4859 29.636H4.48587C4.48587 30.7547 4.88549 31.8449 5.6579 32.7082C6.3556 33.488 7.17612 33.8836 7.76659 34.092L10.4291 26.548ZM12.4859 29.636V14.084H4.48587V29.636H12.4859ZM8.48587 10.084H4.81387V18.084H8.48587V10.084ZM4.81387 10.084C5.52153 10.084 6.19486 10.2854 6.76202 10.6334C7.29593 10.9609 7.63214 11.3526 7.82515 11.6289C8.01749 11.9042 8.12045 12.1397 8.1699 12.2671C8.22191 12.4011 8.24439 12.493 8.25062 12.5198C8.25562 12.5412 8.20187 12.2567 8.20187 11.456H0.201865C0.201865 12.4073 0.250111 13.4368 0.459107 14.3342C0.557558 14.757 0.765584 15.4928 1.26708 16.2106C1.83572 17.0245 3.01419 18.084 4.81387 18.084V10.084ZM8.20187 11.456C8.20187 10.0102 8.37061 8.80712 8.65749 7.81149L0.970238 5.59651C0.441116 7.43287 0.201865 9.3978 0.201865 11.456H8.20187ZM8.68216 7.72197C8.49261 8.44226 8.13198 8.94124 7.86724 9.23129C7.60675 9.51668 7.36671 9.68094 7.25034 9.75417C7.03326 9.89078 6.93515 9.9037 7.11202 9.8453C7.43981 9.73707 8.11257 9.57583 9.25573 9.39473L8.00401 1.49326C6.72316 1.69617 5.54792 1.93693 4.60371 2.2487C4.14458 2.4003 3.55447 2.62771 2.98939 2.98333C2.54302 3.26423 1.36798 4.08086 0.945567 5.68603L8.68216 7.72197ZM9.25572 9.39473C11.621 9.02004 13.2334 8.868 14.2099 8.868V0.868C12.5943 0.868 10.4868 1.09996 8.00401 1.49326L9.25572 9.39473ZM14.2099 8.868C14.8163 8.868 15.2764 8.87942 15.608 8.89784C15.7727 8.90699 15.8854 8.91678 15.9551 8.92453C16.0341 8.93331 16.0155 8.93484 15.9341 8.91675L17.6696 1.10725C16.74 0.900672 15.4382 0.868 14.2099 0.868V8.868ZM15.9342 8.91675C16.0195 8.93571 16.0272 8.94263 15.9796 8.92499C15.9393 8.91006 15.7752 8.84697 15.5551 8.70019L19.9927 2.04381C19.1749 1.49861 18.2927 1.24572 17.6696 1.10725L15.9342 8.91675ZM15.8313 8.86863C15.6292 8.75633 15.3093 8.52989 15.0229 8.12896L21.5328 3.47904C21.0064 2.74211 20.3506 2.22767 19.7164 1.87537L15.8313 8.86863ZM14.9032 7.95149C14.7848 7.7654 14.5299 7.27986 14.5299 6.56H22.5299C22.5299 5.36014 22.1069 4.3706 21.6525 3.6565L14.9032 7.95149ZM14.5299 6.56V29.636H22.5299V6.56H14.5299Z"
        fill="inherit"
        mask="url(#path-1-outside-1_914_4039)"
      />
    </svg>
  ),
  two: (props: React.SVGProps<SVGSVGElement>) => (
    <svg
      width={29}
      height={35}
      viewBox="0 0 29 35"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      {...props}
    >
      <mask
        id="path-1-outside-1_914_4034"
        maskUnits="userSpaceOnUse"
        x={-0.0256348}
        y={0.5}
        width={29}
        height={34}
        fill="black"
      >
        <rect fill="white" x={-0.0256348} y={0.5} width={29} height={34} />
        <path d="M7.42508 14.264C6.75308 14.264 6.16508 13.472 5.66108 11.888C5.18108 10.304 4.94108 8.78 4.94108 7.316C4.94108 6.98 5.31308 6.608 6.05708 6.2C6.80108 5.768 7.92908 5.384 9.44108 5.048C10.9531 4.712 12.5971 4.544 14.3731 4.544C21.2611 4.544 24.7051 6.956 24.7051 11.78C24.7051 13.124 24.4171 14.384 23.8411 15.56C23.2651 16.736 22.6291 17.684 21.9331 18.404C21.2371 19.1 20.4211 19.748 19.4851 20.348C18.4051 21.02 17.3731 21.548 16.3891 21.932H23.5891C23.7331 21.932 23.8891 22.004 24.0571 22.148C24.2251 22.268 24.4051 22.652 24.5971 23.3C24.7891 23.924 24.8851 24.716 24.8851 25.676C24.8851 26.612 24.8251 27.404 24.7051 28.052C24.5851 28.676 24.4411 29.132 24.2731 29.42C23.9131 30.068 23.5891 30.416 23.3011 30.464L23.1211 30.5H7.35308C5.84108 30.5 5.08508 28.136 5.08508 23.408C5.08508 22.88 6.64508 21.428 9.76508 19.052C10.9411 18.188 12.0211 17.24 13.0051 16.208C13.9891 15.176 14.4811 14.336 14.4811 13.688C14.4811 12.968 13.9411 12.608 12.8611 12.608C11.7811 12.608 10.6411 12.884 9.44108 13.436C8.26508 13.988 7.59308 14.264 7.42508 14.264Z" />
      </mask>
      <path
        d="M5.66108 11.888L1.83299 13.048L1.841 13.0745L1.84938 13.1008L5.66108 11.888ZM6.05708 6.2L7.98041 9.70725L8.02331 9.68372L8.06563 9.65916L6.05708 6.2ZM9.44108 5.048L8.57336 1.14325L8.57336 1.14325L9.44108 5.048ZM23.8411 15.56L20.2488 13.8005L20.2488 13.8005L23.8411 15.56ZM21.9331 18.404L24.7615 21.2324L24.7855 21.2085L24.809 21.1841L21.9331 18.404ZM19.4851 20.348L21.5983 23.7442L21.6211 23.73L21.6437 23.7155L19.4851 20.348ZM16.3891 21.932L14.9349 18.2057L16.3891 25.932V21.932ZM24.0571 22.148L21.4539 25.185L21.5882 25.3001L21.7321 25.4029L24.0571 22.148ZM24.5971 23.3L20.7619 24.4364L20.7678 24.4564L20.774 24.4763L24.5971 23.3ZM24.7051 28.052L28.6331 28.8074L28.6357 28.7939L28.6382 28.7804L24.7051 28.052ZM24.2731 29.42L20.818 27.4045L20.7968 27.4408L20.7765 27.4774L24.2731 29.42ZM23.3011 30.464L22.6435 26.5184L22.5799 26.529L22.5166 26.5417L23.3011 30.464ZM23.1211 30.5V34.5H23.5172L23.9056 34.4223L23.1211 30.5ZM9.76508 19.052L7.39678 15.8285L7.36904 15.8489L7.34165 15.8697L9.76508 19.052ZM13.0051 16.208L10.1101 13.4477L10.1101 13.4477L13.0051 16.208ZM9.44108 13.436L7.76946 9.80204L7.75543 9.80849L7.74146 9.81505L9.44108 13.436ZM7.42508 10.264C8.08963 10.264 8.65608 10.4716 9.06552 10.729C9.44024 10.9645 9.63391 11.2077 9.69172 11.2856C9.78066 11.4054 9.66945 11.2933 9.47279 10.6752L1.84938 13.1008C2.15672 14.0667 2.59151 15.1426 3.26844 16.0544C3.94721 16.9687 5.31001 18.264 7.42508 18.264V10.264ZM9.48918 10.728C9.10853 9.47181 8.94108 8.33952 8.94108 7.316H0.941084C0.941084 9.22048 1.25364 11.1362 1.83299 13.048L9.48918 10.728ZM8.94108 7.316C8.94108 8.67616 8.20054 9.4614 8.04851 9.61343C7.85387 9.80807 7.76399 9.82593 7.98041 9.70725L4.13376 2.69275C3.60617 2.98207 2.9583 3.38993 2.39166 3.95657C1.86763 4.4806 0.941084 5.61984 0.941084 7.316H8.94108ZM8.06563 9.65916C8.27752 9.53612 8.93137 9.25884 10.3088 8.95275L8.57336 1.14325C6.9268 1.50915 5.32465 1.99988 4.04854 2.74084L8.06563 9.65916ZM10.3088 8.95275C11.498 8.68849 12.8473 8.544 14.3731 8.544V0.543999C12.3468 0.543999 10.4082 0.735511 8.57336 1.14325L10.3088 8.95275ZM14.3731 8.544C17.4728 8.544 19.0843 9.10891 19.8275 9.62939C20.3109 9.96796 20.7051 10.451 20.7051 11.78H28.7051C28.7051 8.28499 27.3773 5.15004 24.4167 3.07661C21.7159 1.18509 18.1613 0.543999 14.3731 0.543999V8.544ZM20.7051 11.78C20.7051 12.5307 20.5493 13.187 20.2488 13.8005L27.4333 17.3195C28.2848 15.581 28.7051 13.7173 28.7051 11.78H20.7051ZM20.2488 13.8005C19.8035 14.7097 19.3888 15.2808 19.0571 15.6239L24.809 21.1841C25.8694 20.0872 26.7267 18.7623 27.4333 17.3195L20.2488 13.8005ZM19.1047 15.5756C18.6361 16.0442 18.051 16.516 17.3264 16.9805L21.6437 23.7155C22.7911 22.98 23.8381 22.1558 24.7615 21.2324L19.1047 15.5756ZM17.3719 16.9518C16.4601 17.5191 15.6488 17.9271 14.9349 18.2057L17.8433 25.6583C19.0974 25.1689 20.35 24.5209 21.5983 23.7442L17.3719 16.9518ZM16.3891 25.932H23.5891V17.932H16.3891V25.932ZM23.5891 25.932C22.3815 25.932 21.6385 25.3432 21.4539 25.185L26.6602 19.111C26.1397 18.6648 25.0847 17.932 23.5891 17.932V25.932ZM21.7321 25.4029C21.2622 25.0673 20.9984 24.7118 20.8937 24.5603C20.7739 24.3867 20.7123 24.2579 20.6962 24.2237C20.6665 24.1603 20.6937 24.2061 20.7619 24.4364L28.4323 22.1636C28.3085 21.7459 28.1496 21.2757 27.9399 20.8283C27.8054 20.5412 27.3591 19.591 26.382 18.8931L21.7321 25.4029ZM20.774 24.4763C20.8076 24.5857 20.8851 24.9457 20.8851 25.676H28.8851C28.8851 24.4863 28.7705 23.2623 28.4202 22.1237L20.774 24.4763ZM20.8851 25.676C20.8851 26.4605 20.8333 26.9925 20.772 27.3236L28.6382 28.7804C28.8169 27.8155 28.8851 26.7635 28.8851 25.676H20.8851ZM20.7771 27.2966C20.7579 27.3964 20.7402 27.4764 20.725 27.5387C20.7097 27.6014 20.6984 27.6397 20.6928 27.6575C20.6869 27.676 20.6901 27.663 20.7058 27.6256C20.7209 27.5896 20.756 27.5108 20.818 27.4045L27.7282 31.4355C28.2462 30.5476 28.4905 29.5489 28.6331 28.8074L20.7771 27.2966ZM20.7765 27.4774C20.6767 27.657 20.687 27.5976 20.8325 27.4413C20.912 27.3559 21.0817 27.1876 21.3508 27.0135C21.6234 26.8371 22.0592 26.6158 22.6435 26.5184L23.9587 34.4096C25.37 34.1743 26.2728 33.3383 26.6877 32.8927C27.1572 32.3884 27.5095 31.831 27.7697 31.3626L20.7765 27.4774ZM22.5166 26.5417L22.3366 26.5777L23.9056 34.4223L24.0856 34.3863L22.5166 26.5417ZM23.1211 26.5H7.35308V34.5H23.1211V26.5ZM7.35308 26.5C8.16161 26.5 8.84624 26.8695 9.24726 27.2875C9.54694 27.5999 9.55245 27.7914 9.46201 27.5086C9.27735 26.9312 9.08508 25.6613 9.08508 23.408H1.08508C1.08508 25.8827 1.27082 28.1588 1.84216 29.9454C2.35662 31.5541 3.84338 34.5 7.35308 34.5V26.5ZM9.08508 23.408C9.08508 24.2532 8.79845 24.8344 8.71601 24.9948C8.65644 25.1107 8.60421 25.1929 8.5743 25.2376C8.54332 25.2839 8.52286 25.31 8.51955 25.3142C8.51554 25.3193 8.54633 25.2803 8.63131 25.1917C8.71337 25.106 8.82754 24.9932 8.98034 24.851C9.61532 24.2599 10.662 23.3968 12.1885 22.2343L7.34165 15.8697C5.74817 17.0832 4.45485 18.1341 3.52983 18.995C3.07698 19.4165 2.61483 19.882 2.23562 20.3633C2.04665 20.6031 1.80781 20.9349 1.6004 21.3386C1.42047 21.6888 1.08508 22.4308 1.08508 23.408H9.08508ZM12.1334 22.2755C13.4937 21.2761 14.7507 20.1738 15.9 18.9683L10.1101 13.4477C9.29152 14.3062 8.38842 15.0999 7.39678 15.8285L12.1334 22.2755ZM15.9 18.9683C16.5165 18.3217 17.1073 17.6046 17.5636 16.8256C18.0017 16.0777 18.4811 14.993 18.4811 13.688H10.4811C10.4811 13.3448 10.5457 13.0915 10.591 12.9543C10.6359 12.8185 10.6742 12.7591 10.6606 12.7824C10.6483 12.8033 10.6046 12.873 10.5098 12.9934C10.4161 13.1122 10.2859 13.2634 10.1101 13.4477L15.9 18.9683ZM18.4811 13.688C18.4811 12.1628 17.8137 10.5623 16.2949 9.5498C15.0623 8.72807 13.7192 8.608 12.8611 8.608V16.608C13.083 16.608 12.5499 16.6679 11.8573 16.2062C11.4579 15.94 11.0692 15.5385 10.8021 15.0044C10.5433 14.4868 10.4811 14.0104 10.4811 13.688H18.4811ZM12.8611 8.608C11.0901 8.608 9.37934 9.0615 7.76946 9.80204L11.1127 17.07C11.9028 16.7065 12.4721 16.608 12.8611 16.608V8.608ZM7.74146 9.81505C7.17448 10.0812 6.78134 10.2559 6.53541 10.3569C6.40783 10.4093 6.37128 10.4206 6.39697 10.4121C6.40917 10.4081 6.48309 10.3838 6.59777 10.3569C6.65712 10.3429 6.75159 10.3226 6.87164 10.3046C6.98344 10.2879 7.17827 10.264 7.42508 10.264V18.264C8.19177 18.264 8.83687 18.0312 8.8942 18.0124C9.12989 17.9349 9.36634 17.8427 9.57476 17.7571C10.0008 17.5821 10.5317 17.3428 11.1407 17.0569L7.74146 9.81505Z"
        fill="inherit"
        mask="url(#path-1-outside-1_914_4034)"
      />
    </svg>
  ),
  three: (props: React.SVGProps<SVGSVGElement>) => (
    <svg
      width={29}
      height={35}
      viewBox="0 0 29 35"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      {...props}
    >
      <mask
        id="path-1-outside-1_914_4029"
        maskUnits="userSpaceOnUse"
        x={0.421387}
        y={0.5}
        width={28}
        height={35}
        fill="black"
      >
        <rect fill="white" x={0.421387} y={0.5} width={28} height={35} />
        <path d="M24.0039 11.276C24.0039 13.7 23.0439 15.512 21.1239 16.712C21.3879 16.832 21.7239 17.12 22.1319 17.576C22.5639 18.032 22.9239 18.488 23.2119 18.944C23.9559 20.12 24.3279 21.512 24.3279 23.12C24.3279 25.76 23.3799 27.704 21.4839 28.952C19.5879 30.2 16.9839 30.824 13.6719 30.824C12.0399 30.824 10.4919 30.692 9.02789 30.428C7.58789 30.14 6.48389 29.828 5.71589 29.492C4.94789 29.132 4.56389 28.808 4.56389 28.52C4.56389 27.2 4.70789 26.036 4.99589 25.028C5.28389 24.02 5.60789 23.312 5.96789 22.904C6.32789 22.472 6.67589 22.256 7.01189 22.256C7.10789 22.256 7.74389 22.472 8.91989 22.904C10.0959 23.336 11.2479 23.552 12.3759 23.552C13.5279 23.552 14.1039 23.192 14.1039 22.472C14.1039 21.488 12.8919 20.96 10.4679 20.888C9.50789 20.864 8.97989 20.84 8.88389 20.816C8.37989 20.648 8.12789 19.592 8.12789 17.648C8.12789 15.704 8.37989 14.636 8.88389 14.444C8.97989 14.396 9.50789 14.372 10.4679 14.372C12.8919 14.324 14.1039 13.832 14.1039 12.896C14.1039 12.176 13.5759 11.816 12.5199 11.816C11.4879 11.816 10.3359 12.068 9.06389 12.572C7.79189 13.076 7.09589 13.328 6.97589 13.328C6.42389 13.328 5.91989 12.524 5.46389 10.916C5.00789 9.308 4.77989 8.168 4.77989 7.496C4.77989 6.872 5.47589 6.236 6.86789 5.588C8.40389 4.892 10.6599 4.544 13.6359 4.544C20.5479 4.544 24.0039 6.788 24.0039 11.276Z" />
      </mask>
      <path
        d="M21.1239 16.712L19.0039 13.32L12.6844 17.2697L19.4687 20.3535L21.1239 16.712ZM22.1319 17.576L19.1509 20.2432L19.1889 20.2856L19.2281 20.327L22.1319 17.576ZM23.2119 18.944L19.8299 21.08L19.8316 21.0826L23.2119 18.944ZM21.4839 28.952L19.2846 25.6108L19.2846 25.6108L21.4839 28.952ZM9.02789 30.428L8.24342 34.3503L8.28066 34.3578L8.31802 34.3645L9.02789 30.428ZM5.71589 29.492L4.01815 33.1138L4.0651 33.1358L4.11261 33.1566L5.71589 29.492ZM4.99589 25.028L8.84198 26.1269L8.84198 26.1269L4.99589 25.028ZM5.96789 22.904L8.96724 25.5505L9.00461 25.5081L9.04077 25.4647L5.96789 22.904ZM8.91989 22.904L10.2992 19.1493L10.2992 19.1493L8.91989 22.904ZM10.4679 20.888L10.5866 16.8898L10.5773 16.8895L10.5679 16.8892L10.4679 20.888ZM8.88389 20.816L7.61898 24.6107L7.76471 24.6593L7.91373 24.6966L8.88389 20.816ZM8.88389 14.444L10.3079 18.182L10.4943 18.1109L10.6727 18.0217L8.88389 14.444ZM10.4679 14.372V18.372H10.5075L10.5471 18.3712L10.4679 14.372ZM9.06389 12.572L10.5373 16.2907L10.5373 16.2907L9.06389 12.572ZM5.46389 10.916L9.31214 9.8247L9.31214 9.8247L5.46389 10.916ZM6.86789 5.588L5.21697 1.94459L5.19832 1.95303L5.17977 1.96167L6.86789 5.588ZM20.0039 11.276C20.0039 12.438 19.6583 12.911 19.0039 13.32L23.2439 20.104C26.4294 18.113 28.0039 14.962 28.0039 11.276H20.0039ZM19.4687 20.3535C19.2837 20.2694 19.1548 20.1879 19.0862 20.1412C19.015 20.0929 18.9761 20.0596 18.9707 20.055C18.9651 20.0502 19.0236 20.1009 19.1509 20.2432L25.1129 14.9088C24.6555 14.3976 23.8527 13.5585 22.7791 13.0705L19.4687 20.3535ZM19.2281 20.327C19.5095 20.6241 19.7014 20.8765 19.8299 21.08L26.5938 16.808C26.1464 16.0995 25.6182 15.4399 25.0357 14.825L19.2281 20.327ZM19.8316 21.0826C20.111 21.5242 20.3279 22.1489 20.3279 23.12H28.3279C28.3279 20.8751 27.8008 18.7158 26.5922 16.8054L19.8316 21.0826ZM20.3279 23.12C20.3279 24.6695 19.8589 25.2329 19.2846 25.6108L23.6831 32.2932C26.9009 30.1751 28.3279 26.8505 28.3279 23.12H20.3279ZM19.2846 25.6108C18.2771 26.2741 16.5421 26.824 13.6719 26.824V34.824C17.4257 34.824 20.8987 34.1259 23.6831 32.2932L19.2846 25.6108ZM13.6719 26.824C12.2552 26.824 10.9462 26.7094 9.73775 26.4915L8.31802 34.3645C10.0376 34.6746 11.8245 34.824 13.6719 34.824V26.824ZM9.81235 26.5057C8.47754 26.2387 7.6992 25.9936 7.31916 25.8274L4.11261 33.1566C5.26858 33.6624 6.69824 34.0413 8.24342 34.3503L9.81235 26.5057ZM7.41362 25.8702C7.16142 25.7519 7.23436 25.7556 7.43137 25.9218C7.53769 26.0115 7.78514 26.2359 8.02414 26.6168C8.27476 27.0162 8.56389 27.67 8.56389 28.52H0.563887C0.563887 30.4787 1.8177 31.6525 2.2724 32.0362C2.85342 32.5264 3.50235 32.8721 4.01815 33.1138L7.41362 25.8702ZM8.56389 28.52C8.56389 27.4802 8.67849 26.6991 8.84198 26.1269L1.14979 23.9291C0.737284 25.3729 0.563887 26.9198 0.563887 28.52H8.56389ZM8.84198 26.1269C8.9483 25.7548 9.03687 25.5262 9.09212 25.4055C9.11828 25.3483 9.12763 25.336 9.11504 25.3565C9.10322 25.3758 9.05705 25.4487 8.96724 25.5505L2.96854 20.2575C1.99717 21.3584 1.47714 22.7834 1.14979 23.9291L8.84198 26.1269ZM9.04077 25.4647C9.03461 25.4721 9.00072 25.5122 8.93627 25.5712C8.87223 25.6298 8.76401 25.7199 8.60834 25.8166C8.28805 26.0154 7.73764 26.256 7.01189 26.256V18.256C4.88521 18.256 3.51765 19.5961 2.895 20.3433L9.04077 25.4647ZM7.01189 26.256C6.83768 26.256 6.69687 26.2443 6.60852 26.2352C6.51518 26.2254 6.43838 26.214 6.38449 26.2051C6.2798 26.1878 6.20078 26.17 6.16268 26.1611C6.08648 26.1433 6.04239 26.1298 6.05307 26.133C6.06824 26.1374 6.13462 26.158 6.27456 26.2055C6.54549 26.2975 6.96202 26.4461 7.54062 26.6587L10.2992 19.1493C9.70176 18.9299 9.21229 18.7545 8.84722 18.6305C8.66915 18.57 8.48504 18.5096 8.31721 18.46C8.23638 18.4362 8.11767 18.4024 7.98372 18.3711C7.96563 18.3669 7.537 18.256 7.01189 18.256V26.256ZM7.54062 26.6587C9.1097 27.2351 10.7281 27.552 12.3759 27.552V19.552C11.7677 19.552 11.0821 19.4369 10.2992 19.1493L7.54062 26.6587ZM12.3759 27.552C13.2391 27.552 14.5655 27.4405 15.7919 26.674C17.3317 25.7116 18.1039 24.1113 18.1039 22.472H10.1039C10.1039 22.1114 10.1792 21.6008 10.4665 21.0621C10.7592 20.5132 11.1689 20.1294 11.5519 19.89C12.2022 19.4835 12.6647 19.552 12.3759 19.552V27.552ZM18.1039 22.472C18.1039 21.3318 17.7277 20.2284 16.9977 19.3177C16.3198 18.472 15.4839 17.9721 14.7924 17.6709C13.4783 17.0984 11.9551 16.9304 10.5866 16.8898L10.3491 24.8862C10.8289 24.9005 11.174 24.9356 11.4074 24.9741C11.6534 25.0147 11.6894 25.0453 11.5973 25.0051C11.5118 24.9679 11.1305 24.789 10.7556 24.3213C10.3286 23.7886 10.1039 23.1202 10.1039 22.472H18.1039ZM10.5679 16.8892C10.097 16.8775 9.75681 16.8663 9.53352 16.8561C9.41913 16.8509 9.36137 16.8471 9.34368 16.8458C9.33374 16.845 9.35972 16.8468 9.40751 16.8524C9.43206 16.8553 9.47843 16.8611 9.53892 16.8707C9.59009 16.8789 9.70613 16.8985 9.85404 16.9354L7.91373 24.6966C8.32365 24.799 8.72245 24.8216 8.7301 24.8222C8.8684 24.8329 9.02065 24.8411 9.17026 24.8479C9.47496 24.8617 9.87877 24.8745 10.3679 24.8867L10.5679 16.8892ZM10.1488 17.0213C11.1829 17.366 11.7329 18.0598 11.9563 18.4215C12.0713 18.6076 12.1345 18.7578 12.1652 18.839C12.1816 18.8824 12.1922 18.9155 12.1984 18.9362C12.2046 18.957 12.2074 18.9686 12.2076 18.9695C12.2077 18.9698 12.2008 18.9405 12.1912 18.8752C12.1816 18.8108 12.1709 18.7217 12.1611 18.6047C12.1412 18.3676 12.1279 18.0525 12.1279 17.648H4.12789C4.12789 18.7284 4.1919 19.8449 4.42614 20.8265C4.54301 21.3162 4.74819 21.975 5.14994 22.6255C5.56238 23.2932 6.33289 24.182 7.61898 24.6107L10.1488 17.0213ZM12.1279 17.648C12.1279 16.7872 12.1894 16.3949 12.21 16.3076C12.2202 16.2643 12.1778 16.4857 11.9831 16.8102C11.7819 17.1456 11.2781 17.8124 10.3079 18.182L7.45991 10.706C6.23772 11.1716 5.51341 12.0439 5.12317 12.6943C4.73945 13.3338 4.53957 13.9797 4.42379 14.4704C4.19239 15.4511 4.12789 16.5648 4.12789 17.648H12.1279ZM10.6727 18.0217C10.5304 18.0929 10.4051 18.1446 10.3086 18.1811C10.2106 18.2182 10.1248 18.2461 10.0563 18.2666C9.92302 18.3066 9.8144 18.331 9.74675 18.345C9.6151 18.3721 9.52101 18.3832 9.49538 18.3861C9.46109 18.3901 9.44647 18.3909 9.45913 18.39C9.46985 18.3892 9.49375 18.3877 9.53352 18.3859C9.70701 18.378 10.0082 18.372 10.4679 18.372V10.372C9.96753 10.372 9.52476 10.378 9.17026 10.3941C8.99888 10.4019 8.7893 10.4145 8.57839 10.4389C8.47476 10.4508 8.31617 10.4717 8.13352 10.5093C8.02311 10.532 7.58753 10.62 7.09503 10.8663L10.6727 18.0217ZM10.5471 18.3712C11.9038 18.3444 13.4041 18.1991 14.6994 17.6733C15.3764 17.3985 16.2251 16.9293 16.9263 16.1031C17.691 15.2022 18.1039 14.0787 18.1039 12.896H10.1039C10.1039 12.1813 10.3653 11.4703 10.827 10.9264C11.2252 10.4572 11.6194 10.2895 11.6904 10.2607C11.7738 10.2269 11.7271 10.2581 11.471 10.2961C11.2282 10.3322 10.8747 10.3632 10.3887 10.3728L10.5471 18.3712ZM18.1039 12.896C18.1039 11.4088 17.4702 9.80993 15.9612 8.78109C14.727 7.93955 13.3776 7.816 12.5199 7.816V15.816C12.7181 15.816 12.1608 15.8724 11.4545 15.3909C11.0506 15.1155 10.6695 14.7085 10.4113 14.1803C10.1621 13.6705 10.1039 13.2058 10.1039 12.896H18.1039ZM12.5199 7.816C10.8484 7.816 9.18707 8.22064 7.59043 8.85327L10.5373 16.2907C11.4847 15.9154 12.1274 15.816 12.5199 15.816V7.816ZM7.59043 8.85327C6.96611 9.10065 6.5177 9.27237 6.22612 9.37794C6.15556 9.40348 6.10016 9.42298 6.05817 9.43736C6.03743 9.44446 6.02156 9.44977 6.01006 9.45354C5.99838 9.45737 5.99318 9.45898 5.99359 9.45885C5.99395 9.45874 5.99639 9.45799 6.00071 9.45671C6.00499 9.45544 6.0119 9.45342 6.02115 9.45082C6.03776 9.44615 6.072 9.43675 6.11941 9.42544C6.16263 9.41512 6.24672 9.396 6.35754 9.37782C6.41462 9.36845 6.4929 9.35699 6.58702 9.34749C6.67773 9.33833 6.81208 9.328 6.97589 9.328V17.328C7.50056 17.328 7.92263 17.2198 7.97636 17.2069C8.12758 17.1709 8.26123 17.1314 8.35418 17.1026C8.54549 17.0436 8.75219 16.9716 8.94965 16.9001C9.35408 16.7536 9.88967 16.5474 10.5373 16.2907L7.59043 8.85327ZM6.97589 9.328C7.87954 9.328 8.5745 9.67532 8.99397 9.99469C9.3716 10.2822 9.54419 10.5544 9.57304 10.6005C9.61926 10.6742 9.50258 10.4963 9.31214 9.8247L1.61563 12.0073C1.88119 12.9437 2.24451 13.9718 2.79474 14.8495C3.24781 15.5723 4.55612 17.328 6.97589 17.328V9.328ZM9.31214 9.8247C9.10161 9.08229 8.95981 8.50355 8.87321 8.07053C8.77933 7.60113 8.77989 7.4457 8.77989 7.496H0.779887C0.779887 8.78787 1.16444 10.4163 1.61563 12.0073L9.31214 9.8247ZM8.77989 7.496C8.77989 8.77527 8.05802 9.45097 8.00017 9.50384C7.919 9.57801 8.0281 9.46008 8.55601 9.21433L5.17977 1.96167C4.31567 2.36392 3.38078 2.88798 2.6036 3.59816C1.84975 4.28702 0.779887 5.59272 0.779887 7.496H8.77989ZM8.51881 9.23141C9.28071 8.88618 10.8589 8.544 13.6359 8.544V0.543999C10.4609 0.543999 7.52707 0.897821 5.21697 1.94459L8.51881 9.23141ZM13.6359 8.544C16.7868 8.544 18.4586 9.07867 19.2336 9.58184C19.7101 9.89122 20.0039 10.243 20.0039 11.276H28.0039C28.0039 7.821 26.5697 4.80678 23.5902 2.87216C20.9091 1.13133 17.3969 0.543999 13.6359 0.543999V8.544Z"
        fill="inherit"
        mask="url(#path-1-outside-1_914_4029)"
      />
    </svg>
  ),
  four: (props: React.SVGProps<SVGSVGElement>) => (
    <svg
      width={29}
      height={35}
      viewBox="0 0 29 35"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      {...props}
    >
      <mask
        id="path-1-outside-1_914_4024"
        maskUnits="userSpaceOnUse"
        x={-0.27002}
        y={0.5}
        width={29}
        height={34}
        fill="black"
      >
        <rect fill="white" x={-0.27002} y={0.5} width={29} height={34} />
        <path d="M24.2841 29.636C24.2841 29.9 23.5521 30.116 22.0881 30.284C20.6241 30.428 19.1601 30.5 17.6961 30.5C16.2321 30.5 15.2841 30.44 14.8521 30.32C14.4441 30.176 14.2401 29.948 14.2401 29.636V25.208H5.24007C4.42407 25.208 4.01607 23.216 4.01607 19.232C4.01607 18.776 4.98807 16.82 6.93207 13.364C8.90007 9.908 10.2561 7.64 11.0001 6.56C11.2881 6.152 12.3681 5.768 14.2401 5.408C16.1121 5.048 17.9361 4.868 19.7121 4.868C22.7601 4.868 24.2841 5.432 24.2841 6.56V29.636ZM14.8521 19.592L14.8881 11.744L12.3681 19.592H14.8521Z" />
      </mask>
      <path
        d="M22.0881 30.284L22.4796 34.2648L22.5119 34.2616L22.5441 34.2579L22.0881 30.284ZM14.8521 30.32L13.5208 34.092L13.6497 34.1375L13.7815 34.1741L14.8521 30.32ZM14.2401 25.208H18.2401V21.208H14.2401V25.208ZM6.93207 13.364L3.45613 11.3846L3.45093 11.3938L3.44577 11.403L6.93207 13.364ZM11.0001 6.56L7.7322 4.25327L7.71902 4.27195L7.70604 4.29078L11.0001 6.56ZM14.2401 5.408L14.9955 9.33602L14.9955 9.33602L14.2401 5.408ZM14.8521 19.592V23.592H18.8338L18.852 19.6103L14.8521 19.592ZM14.8881 11.744L18.888 11.7623L11.0796 10.5211L14.8881 11.744ZM12.3681 19.592L8.5596 18.3691L6.88252 23.592H12.3681V19.592ZM20.2841 29.636C20.2841 27.6496 21.6718 26.6646 21.9534 26.48C22.1749 26.3348 22.3553 26.2543 22.4411 26.2187C22.5346 26.1798 22.5941 26.1622 22.603 26.1595C22.6151 26.156 22.5461 26.1762 22.3598 26.2088C22.1826 26.2398 21.9432 26.2744 21.6321 26.3101L22.5441 34.2579C23.3356 34.1671 24.1615 34.0407 24.8671 33.8325C25.1911 33.7369 25.7649 33.5472 26.3403 33.17C26.8048 32.8654 28.2841 31.7544 28.2841 29.636H20.2841ZM21.6965 26.3032C20.362 26.4345 19.0287 26.5 17.6961 26.5V34.5C19.2915 34.5 20.8861 34.4215 22.4796 34.2648L21.6965 26.3032ZM17.6961 26.5C17.0086 26.5 16.4976 26.4856 16.1397 26.463C15.9618 26.4517 15.8497 26.4401 15.7902 26.4323C15.7146 26.4225 15.7788 26.426 15.9226 26.4659L13.7815 34.1741C14.4231 34.3523 15.1195 34.4144 15.6344 34.447C16.2246 34.4844 16.9195 34.5 17.6961 34.5V26.5ZM16.1834 26.548C16.3658 26.6124 16.8803 26.822 17.374 27.3738C17.9425 28.0091 18.2401 28.8293 18.2401 29.636H10.2401C10.2401 30.7547 10.6397 31.8449 11.4121 32.7082C12.1098 33.488 12.9303 33.8836 13.5208 34.092L16.1834 26.548ZM18.2401 29.636V25.208H10.2401V29.636H18.2401ZM14.2401 21.208H5.24007V29.208H14.2401V21.208ZM5.24007 21.208C6.01233 21.208 6.70685 21.4609 7.24149 21.8338C7.72927 22.174 7.99464 22.5484 8.11262 22.7404C8.32039 23.0785 8.30773 23.2386 8.24072 22.9114C8.12042 22.324 8.01607 21.159 8.01607 19.232H0.0160742C0.0160742 21.289 0.11573 23.112 0.403425 24.5166C0.540415 25.1854 0.782763 26.0925 1.29653 26.9286C1.83256 27.801 3.09498 29.208 5.24007 29.208V21.208ZM8.01607 19.232C8.01607 19.5342 7.97848 19.7627 7.95802 19.8711C7.93513 19.9923 7.91142 20.0772 7.90086 20.1133C7.88099 20.1813 7.87506 20.1866 7.9084 20.1039C7.9737 19.9418 8.10399 19.6522 8.32717 19.2031C8.76773 18.3165 9.45764 17.033 10.4184 15.325L3.44577 11.403C2.46251 13.151 1.69442 14.5735 1.16298 15.6429C0.900158 16.1718 0.66595 16.6727 0.488249 17.1136C0.400084 17.3324 0.303033 17.5923 0.222414 17.868C0.162864 18.0717 0.0160742 18.5931 0.0160742 19.232H8.01607ZM10.408 15.3434C12.3909 11.8612 13.6637 9.74429 14.2941 8.82922L7.70604 4.29078C6.84842 5.53571 5.40925 7.95478 3.45613 11.3846L10.408 15.3434ZM14.2679 8.86673C14.0546 9.16899 13.8387 9.37121 13.6947 9.49035C13.5481 9.61163 13.4294 9.68506 13.3687 9.7202C13.2572 9.78479 13.2334 9.78204 13.3661 9.73486C13.4859 9.69228 13.6786 9.63266 13.9621 9.56121C14.242 9.49068 14.5843 9.41509 14.9955 9.33602L13.4847 1.47997C12.4617 1.67669 11.5001 1.90771 10.686 2.19714C10.2787 2.34196 9.81398 2.53421 9.36043 2.79679C8.94929 3.03482 8.27505 3.48423 7.7322 4.25327L14.2679 8.86673ZM14.9955 9.33602C16.6366 9.02043 18.2073 8.868 19.7121 8.868V0.868C17.6648 0.868 15.5876 1.07557 13.4847 1.47997L14.9955 9.33602ZM19.7121 8.868C20.3592 8.868 20.8558 8.8984 21.2226 8.94366C21.6034 8.99064 21.7543 9.04291 21.7528 9.04235C21.745 9.03946 21.6646 9.00949 21.5413 8.93342C21.4167 8.85656 21.2264 8.7191 21.0262 8.49677C20.82 8.26787 20.622 7.96919 20.481 7.60391C20.3398 7.23803 20.2841 6.87869 20.2841 6.56H28.2841C28.2841 5.27908 27.8158 4.08124 26.9705 3.14273C26.2015 2.28896 25.2746 1.81546 24.5294 1.53965C23.0884 1.00636 21.37 0.868 19.7121 0.868V8.868ZM20.2841 6.56V29.636H28.2841V6.56H20.2841ZM18.852 19.6103L18.888 11.7623L10.8881 11.7257L10.8521 19.5737L18.852 19.6103ZM11.0796 10.5211L8.5596 18.3691L16.1766 20.8149L18.6966 12.9669L11.0796 10.5211ZM12.3681 23.592H14.8521V15.592H12.3681V23.592Z"
        fill="inherit"
        mask="url(#path-1-outside-1_914_4024)"
      />
    </svg>
  ),
  location: (props: React.SVGProps<SVGSVGElement>) => (
    <svg
      width="100"
      height="100"
      viewBox="0 0 100 100"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      {...props}
    >
      <path
        d="M28.0001 69.3333C29.0609 69.0239 30.2013 69.1486 31.1702 69.68C32.1392 70.2113 32.8573 71.1058 33.1667 72.1667C33.4762 73.2275 33.3515 74.3679 32.8201 75.3368C32.2888 76.3057 31.3943 77.0239 30.3334 77.3333C28.2501 77.9417 26.7501 78.5833 25.7876 79.1667C26.7792 79.7625 28.3459 80.4292 30.5209 81.05C35.3334 82.425 42.2209 83.3333 50.0001 83.3333C57.7792 83.3333 64.6667 82.425 69.4792 81.05C71.6584 80.4292 73.2209 79.7625 74.2126 79.1667C73.2542 78.5833 71.7542 77.9417 69.6709 77.3333C68.6267 77.0103 67.7513 76.2899 67.2333 75.3274C66.7154 74.365 66.5963 73.2375 66.9019 72.1881C67.2074 71.1386 67.913 70.2513 68.8667 69.7173C69.8204 69.1833 70.9457 69.0454 72.0001 69.3333C74.7834 70.1458 77.3334 71.1875 79.2917 72.525C81.1042 73.7708 83.3334 75.9417 83.3334 79.1667C83.3334 82.4292 81.0501 84.6167 79.2084 85.8625C77.2167 87.2042 74.6126 88.25 71.7668 89.0625C66.0251 90.7083 58.3334 91.6667 50.0001 91.6667C41.6667 91.6667 33.9751 90.7083 28.2334 89.0625C25.3876 88.25 22.7834 87.2042 20.7917 85.8625C18.9501 84.6125 16.6667 82.4292 16.6667 79.1667C16.6667 75.9417 18.8959 73.7708 20.7084 72.525C22.6667 71.1875 25.2167 70.1458 28.0001 69.3333ZM50.0001 31.25C43.5834 31.25 39.5751 38.1958 42.7834 43.75C44.2709 46.3292 47.0209 47.9167 50.0001 47.9167C56.4167 47.9167 60.4251 40.9708 57.2167 35.4167C56.4854 34.1499 55.4334 33.0979 54.1666 32.3665C52.8998 31.6351 51.4628 31.25 50.0001 31.25Z"
        fill="inherit"
      />
      <path
        opacity="0.3"
        d="M50 8.33398C58.288 8.33398 66.2366 11.6264 72.0971 17.4869C77.9576 23.3474 81.25 31.296 81.25 39.584C81.25 50.284 75.4167 58.984 69.375 65.1673C66.9733 67.6003 64.3925 69.8497 61.6542 71.8965C59.1792 73.7548 53.5208 77.2382 53.5208 77.2382C52.4477 77.8481 51.2344 78.1688 50 78.1688C48.7656 78.1688 47.5523 77.8481 46.4792 77.2382C43.6711 75.6098 40.9558 73.8265 38.3458 71.8965C35.6075 69.8497 33.0267 67.6003 30.625 65.1673C24.5833 58.984 18.75 50.284 18.75 39.584C18.75 31.296 22.0424 23.3474 27.9029 17.4869C33.7634 11.6264 41.712 8.33398 50 8.33398Z"
        fill="inherit"
      />
    </svg>
  ),
};

export const dashboardIcons = {
  home: (props?: React.SVGProps<SVGSVGElement>) => (
    <svg
      width={16}
      height={16}
      viewBox="0 0 16 16"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      {...props}
    >
      <path
        d="M1.333 3.333A1.333 1.333 0 0 1 2.667 2h4v12h-4a1.333 1.333 0 0 1-1.334-1.333zm8-1.333h4a1.333 1.333 0 0 1 1.334 1.333v3.334H9.333zm0 7.333h5.334v3.334A1.334 1.334 0 0 1 13.333 14h-4z"
        stroke={"currentColor"}
        strokeLinecap="round"
        strokeLinejoin="round"
      />
    </svg>
  ),
  branches: (props?: React.SVGProps<SVGSVGElement>) => (
    <svg
      width={16}
      height={18}
      viewBox="0 0 16 18"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      {...props}
    >
      <path
        d="M4.48 12.093a.667.667 0 0 1 .373 1.28c-.333.098-.573.2-.727.294.159.095.41.202.757.301.77.22 1.872.365 3.117.365s2.347-.145 3.117-.365c.348-.1.598-.206.757-.301a3.2 3.2 0 0 0-.727-.294.666.666 0 0 1 .373-1.28c.445.13.853.297 1.167.511.29.2.646.547.646 1.063 0 .522-.365.872-.66 1.071-.318.215-.735.382-1.19.512-.919.263-2.15.417-3.483.417s-2.564-.154-3.483-.417c-.455-.13-.872-.297-1.19-.512-.295-.2-.66-.55-.66-1.071 0-.516.356-.864.646-1.063.314-.214.722-.38 1.167-.51M8 6a1.333 1.333 0 1 0 0 2.666A1.333 1.333 0 0 0 8 6"
        fill={"currentColor"}
      />
      <path
        opacity={0.3}
        d="M8 2.333a5 5 0 0 1 5 5c0 1.712-.933 3.104-1.9 4.094q-.577.585-1.235 1.076c-.396.298-1.302.855-1.302.855a1.14 1.14 0 0 1-1.126 0q-.675-.39-1.302-.855A11 11 0 0 1 4.9 11.427C3.933 10.437 3 9.045 3 7.333a5 5 0 0 1 5-5"
        fill={"currentColor"}
      />
    </svg>
  ),
  chat: (props?: React.SVGProps<SVGSVGElement>) => (
    <svg
      width={16}
      height={18}
      viewBox="0 0 16 18"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      {...props}
    >
      <path
        d="M4.8 6.2a.4.4 0 0 1 .4-.4h2.4a.4.4 0 0 1 0 .8H5.2a.4.4 0 0 1-.4-.4m.4 1.2a.4.4 0 0 0 0 .8h1.6a.4.4 0 1 0 0-.8zm1.2-5.2a4.8 4.8 0 0 0-4.215 7.098l-.568 1.992a.4.4 0 0 0 .51.49l1.87-.624A4.8 4.8 0 1 0 6.402 2.2M2.4 7a4 4 0 1 1 1.86 3.38.4.4 0 0 0-.34-.042l-1.326.443.408-1.425a.4.4 0 0 0-.042-.314A4 4 0 0 1 2.4 7m7.422 6.358-1.922-.96a5.6 5.6 0 0 0 1.01-.39l1.09.545 3.6-1.8V10.2a.8.8 0 0 0-.8-.8h-1.339q.185-.385.308-.8H12.8a1.6 1.6 0 0 1 1.6 1.6v4a1.6 1.6 0 0 1-1.6 1.6H7.2a1.6 1.6 0 0 1-1.6-1.6v-1.656q.392.056.8.056v1.6a.8.8 0 0 0 .8.8h5.6a.8.8 0 0 0 .8-.8v-2.553l-3.421 1.71a.4.4 0 0 1-.358 0"
        fill={"currentColor"}
      />
    </svg>
  ),
  files: (props?: React.SVGProps<SVGSVGElement>) => (
    <svg
      width={16}
      height={16}
      viewBox="0 0 16 16"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      {...props}
    >
      <path
        d="M14 8A6 6 0 1 1 1.999 8 6 6 0 0 1 14 8"
        stroke={"currentColor"}
        strokeLinecap="round"
        strokeLinejoin="round"
      />
      <path
        d="M6 10c.567.42 1.257.667 2 .667s1.433-.247 2-.667M8.167 2a1.5 1.5 0 1 0 1 2.618M6.5 6.867a.75.75 0 0 0-.5-.2.75.75 0 0 0-.5.2m5 0a.75.75 0 0 0-.5-.2.75.75 0 0 0-.5.2"
        stroke={"currentColor"}
        strokeLinecap="round"
        strokeLinejoin="round"
      />
    </svg>
  ),
  bookings: (props?: React.SVGProps<SVGSVGElement>) => (
    <svg
      width={16}
      height={16}
      viewBox="0 0 16 16"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      {...props}
    >
      <path
        d="M1.333 3.333A1.333 1.333 0 0 1 2.667 2h4v12h-4a1.333 1.333 0 0 1-1.334-1.333zm8-1.333h4a1.333 1.333 0 0 1 1.334 1.333v3.334H9.333zm0 7.333h5.334v3.334A1.334 1.334 0 0 1 13.333 14h-4z"
        stroke={"currentColor"}
        strokeLinecap="round"
        strokeLinejoin="round"
      />
    </svg>
  ),
  notifications: (props?: React.SVGProps<SVGSVGElement>) => (
    <svg
      width={16}
      height={18}
      viewBox="0 0 16 18"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      {...props}
    >
      <path
        d="M4 13.667v-6a4 4 0 1 1 8 0v6m-8 0h8m-8 0H2.667m9.333 0h1.333m-6 2h1.334"
        stroke={"currentColor"}
        strokeLinecap="round"
        strokeLinejoin="round"
      />
      <path
        d="M8 3.667a.667.667 0 1 0 0-1.334.667.667 0 0 0 0 1.334Z"
        stroke={"currentColor"}
      />
    </svg>
  ),
  reports: (props?: React.SVGProps<SVGSVGElement>) => (
    <svg
      width={16}
      height={16}
      viewBox="0 0 16 16"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      {...props}
    >
      <path
        d="M12.5 2.75h-.085v1h.085a.5.5 0 0 1 .5.5v10a.5.5 0 0 1-.5.5h-9a.5.5 0 0 1-.5-.5v-10a.5.5 0 0 1 .5-.5h.085v-1H3.5A1.5 1.5 0 0 0 2 4.25v10a1.5 1.5 0 0 0 1.5 1.5h9a1.5 1.5 0 0 0 1.5-1.5v-10a1.5 1.5 0 0 0-1.5-1.5"
        fill={"currentColor"}
      />
      <path
        d="M11.5 1.75H10V.25H6v1.5H4.5v3h7zm-1 2h-5v-1H7v-1.5h2v1.5h1.5zm-5.5 3h6v1H5zm0 2.5h6v1H5zm0 2.5h6v1H5z"
        fill={"currentColor"}
      />
    </svg>
  ),
  request: (props?: React.SVGProps<SVGSVGElement>) => (
    <svg
      width={16}
      height={16}
      viewBox="0 0 16 16"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      {...props}
    >
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M8 1.667a3.67 3.67 0 0 0-3.347 2.166q-.06.138-.124.274l-.045.088a.3.3 0 0 1-.085.093.3.3 0 0 1-.12.039A2 2 0 0 1 4 4.333 2.333 2.333 0 0 0 4 9h.448l.667-.667H4A1.667 1.667 0 1 1 4 5h.036c.15 0 .275 0 .375-.02a1 1 0 0 0 .35-.133 1 1 0 0 0 .266-.266 1 1 0 0 0 .104-.188l.13-.283v-.003a3 3 0 0 1 5.478 0l.001.004.129.282c.031.066.066.134.104.188.072.1.154.194.266.266s.23.109.35.134c.1.02.224.02.375.019H12a1.667 1.667 0 0 1 0 3.333h-1.115l.667.667H12a2.333 2.333 0 0 0 0-4.667 3 3 0 0 1-.279-.006.3.3 0 0 1-.12-.04.3.3 0 0 1-.085-.093l-.01-.018-.035-.07q-.064-.135-.124-.273A3.67 3.67 0 0 0 8 1.667"
        fill={"currentColor"}
      />
      <path
        d="m8 8-.236-.236L8 7.529l.236.235zm.333 6a.333.333 0 1 1-.666 0zm-3.236-3.57 2.667-2.666.472.472-2.667 2.667zm3.14-2.666 2.666 2.667-.472.472-2.667-2.667zM8.332 8v6h-.666V8z"
        fill={"currentColor"}
      />
    </svg>
  ),
  site: (props?: React.SVGProps<SVGSVGElement>) => (
    <svg
      width={16}
      height={16}
      viewBox="0 0 16 16"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      {...props}
    >
      <path
        d="M8 0q1.101 0 2.125.281 1.023.282 1.914.805a8 8 0 0 1 1.617 1.25 8.06 8.06 0 0 1 2.063 7.79 8 8 0 0 1-.805 1.913 8 8 0 0 1-1.25 1.617 8.06 8.06 0 0 1-7.79 2.063 8 8 0 0 1-1.913-.805 8 8 0 0 1-1.617-1.25 8.1 8.1 0 0 1-2.055-3.531 8.1 8.1 0 0 1-.008-4.258 8 8 0 0 1 .805-1.914 8 8 0 0 1 1.25-1.617A8.1 8.1 0 0 1 5.867.289 8 8 0 0 1 8 0m0 15q.96 0 1.852-.25a7.2 7.2 0 0 0 1.671-.703q.781-.453 1.422-1.102A7.06 7.06 0 0 0 14.75 9.86 6.6 6.6 0 0 0 15 8q0-.96-.25-1.852a7.2 7.2 0 0 0-.703-1.671 6.8 6.8 0 0 0-1.102-1.422A7.06 7.06 0 0 0 9.86 1.25 6.6 6.6 0 0 0 8 1q-.96 0-1.852.25a7.2 7.2 0 0 0-1.671.703q-.782.453-1.422 1.102A7.06 7.06 0 0 0 1.25 6.14 6.6 6.6 0 0 0 1 8q0 .96.25 1.852a7.2 7.2 0 0 0 .703 1.671q.453.781 1.102 1.422A7.06 7.06 0 0 0 6.14 14.75 6.6 6.6 0 0 0 8 15m4.664-6.875L13.04 7h.586l-.664 2h-.586L12 7.875 11.625 9h-.586l-.664-2h.586l.375 1.125L11.71 7h.578zM9.04 7h.586l-.664 2h-.586L8 7.875 7.625 9h-.586l-.664-2h.586l.375 1.125L7.71 7h.578l.375 1.125zm-4 0h.586l-.664 2h-.586L4 7.875 3.625 9h-.586l-.664-2h.586l.375 1.125L3.71 7h.578l.375 1.125z"
        fill={"currentColor"}
      />
    </svg>
  ),
  team: (props?: React.SVGProps<SVGSVGElement>) => (
    <svg
      width={16}
      height={16}
      viewBox="0 0 16 16"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      {...props}
    >
      <path
        d="M8 2.4a1.2 1.2 0 1 0 0 2.4 1.2 1.2 0 0 0 0-2.4M6 3.6a2 2 0 1 1 4 0 2 2 0 0 1-4 0m6.4-.4a.8.8 0 1 0 0 1.6.8.8 0 0 0 0-1.6m-1.6.8A1.6 1.6 0 1 1 14 4a1.6 1.6 0 0 1-3.2 0m-8 0a.8.8 0 1 1 1.6 0 .8.8 0 0 1-1.6 0m.8-1.6a1.6 1.6 0 1 0 0 3.2 1.6 1.6 0 0 0 0-3.2m.48 9.598L4 12a1.6 1.6 0 0 1-1.6-1.6v-3a.2.2 0 0 1 .2-.2h1.411a1.8 1.8 0 0 1 .292-.8H2.6a1 1 0 0 0-1 1v3a2.4 2.4 0 0 0 2.723 2.378 4 4 0 0 1-.243-.78m7.597.78q.159.022.323.022a2.4 2.4 0 0 0 2.4-2.4v-3a1 1 0 0 0-1-1h-1.703c.157.234.26.506.292.8H13.4a.2.2 0 0 1 .2.2v3a1.6 1.6 0 0 1-1.68 1.598 4 4 0 0 1-.243.78M5.8 6.4a1 1 0 0 0-1 1v3.8a3.2 3.2 0 1 0 6.4 0V7.4a1 1 0 0 0-1-1zm-.2 1a.2.2 0 0 1 .2-.2h4.4a.2.2 0 0 1 .2.2v3.8a2.4 2.4 0 0 1-4.8 0z"
        fill={"currentColor"}
      />
    </svg>
  ),
};
