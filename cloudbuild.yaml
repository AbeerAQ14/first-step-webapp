options:
  logging: CLOUD_LOGGING_ONLY
  machineType: E2_HIGHCPU_8
  volumes:
    - name: docker-cache
      path: /kaniko/cache

steps:
  # Step 0: Try to pull previous cached image
  - name: "gcr.io/cloud-builders/docker"
    id: Pull Cache
    entrypoint: bash
    args:
      - -c
      - |
        docker pull europe-west1-docker.pkg.dev/$PROJECT_ID/first-step-images/first-step-frontend:cache || echo "No cache image found."

  # Step 1: Build Docker image using pulled cache
  - name: "gcr.io/cloud-builders/docker"
    id: Build
    args:
      - build
      - "--cache-from=europe-west1-docker.pkg.dev/$PROJECT_ID/first-step-images/first-step-frontend:cache"
      - "--tag=europe-west1-docker.pkg.dev/$PROJECT_ID/first-step-images/first-step-frontend:latest"
      - "--tag=europe-west1-docker.pkg.dev/$PROJECT_ID/first-step-images/first-step-frontend:cache"
      - "."

  # Step 2: Push both production and cache images
  - name: "gcr.io/cloud-builders/docker"
    id: Push Latest
    args:
      - push
      - europe-west1-docker.pkg.dev/$PROJECT_ID/first-step-images/first-step-frontend:latest

  - name: "gcr.io/cloud-builders/docker"
    id: Push Cache
    args:
      - push
      - europe-west1-docker.pkg.dev/$PROJECT_ID/first-step-images/first-step-frontend:cache

  # Step 3: Deploy to Cloud Run
  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    id: Deploy
    entrypoint: gcloud
    args:
      - run
      - deploy
      - first-step-frontend
      - --image=europe-west1-docker.pkg.dev/$PROJECT_ID/first-step-images/first-step-frontend:latest
      - --region=europe-west1
      - --platform=managed
      - --port=3000
      - --allow-unauthenticated

images:
  - europe-west1-docker.pkg.dev/$PROJECT_ID/first-step-images/first-step-frontend:latest

- name: 'gcr.io/cloud-builders/docker'
  id: Debug Images
  entrypoint: bash
  args:
    - -c
    - docker images
